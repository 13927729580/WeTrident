#!/bin/sh

# 确保将要提交的所有 JavaScript 代码通过 standard 规范的检查

RESULT1=0

checkNewAppStyle () {
  git diff --name-only --cached --relative | grep 'src/.*\.js\?$' | xargs ./node_modules/eslint/bin/eslint.js -c ./.eslintrc.json --parser babel-eslint
  RESULT1=$?
}
checkNewAppStyle

if [[ (($RESULT1 != 0)) ]]; then exit 1; fi

# 功能二: 限制图片大小
#limit_pic_size=102400 #限制图片大小为100KB以下
#
#listNewOrModifiedFiles () {
#  git diff --staged --name-status| grep -v '^D' | sed  -e 's/.\s*//' |grep -i  -E '(png|jpeg)'
#}
#unmunge () {
#  local result="${1#\"}"
#  result="${result%\"}"
#  env printf  "$result"
#}
#checkFileSize () {
#  n=0
#  while read -r munged_filename
#  do
#    f="$(unmunge "$munged_filename")"
#    echo "size $f"
#    h=$(git ls-files -s "$f"|cut -d' ' -f 2)
#    s=$(git cat-file -s "$h")
#    # s=`wc -c $h | awk '{print $1}'`
#    echo "size $s"
#    if [ "$s" -gt "$limit_pic_size" ]
#    then
#      echo -e "\033[31m ERROR: 图片大小限制在($limit_pic_size)Bytes以内，受限图片: $munged_filename ($s)Bytes，推荐使用jpeg格式或压缩png图片。 \033[0m"
#      n=$((n+1))
#    fi
#  done
#
#  [ $n -eq 0 ]
#}
#listNewOrModifiedFiles | checkFileSize
